{"src/lib/components/appaside.react.js": {"description": "CoreUI aside component.", "displayName": "appaside", "methods": [{"name": "isFixed", "docblock": null, "modifiers": [], "params": [{"name": "fixed", "type": null}], "returns": null}, {"name": "isOffCanvas", "docblock": null, "modifiers": [], "params": [{"name": "offCanvas", "type": null}], "returns": null}, {"name": "displayBreakpoint", "docblock": null, "modifiers": [], "params": [{"name": "display", "type": null}], "returns": null}], "props": {"children": {"type": {"name": "node"}, "required": false, "description": "The children."}, "id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks, defaults to `appaside`.", "defaultValue": {"value": "'appaside'", "computed": false}}, "className": {"type": {"name": "string"}, "required": false, "description": "The CSS class name, defaults to `aside-menu`."}, "display": {"type": {"name": "string"}, "required": false, "description": "The display bootstrap class, defaults to `sm, md, lg, xl, \"\"`.", "defaultValue": {"value": "''", "computed": false}}, "fixed": {"type": {"name": "bool"}, "required": false, "description": "The fixed flag, defaults to `false`.", "defaultValue": {"value": "false", "computed": false}}, "isOpen": {"type": {"name": "bool"}, "required": false, "description": "The is open flag, defaults to `false`.", "defaultValue": {"value": "false", "computed": false}}, "offCanvas": {"type": {"name": "bool"}, "required": false, "description": "The off canvas flag, defaults to `true`.", "defaultValue": {"value": "true", "computed": false}}, "tag": {"type": {"name": "union", "value": [{"name": "func"}, {"name": "string"}]}, "required": false, "description": "The HTML tag, defaults to `aside`.", "defaultValue": {"value": "'aside'", "computed": false}}}}, "src/lib/components/appasidetoggler.react.js": {"description": "CoreUI aside toggler component.", "displayName": "appasidetoggler", "methods": [{"name": "toggle", "docblock": null, "modifiers": [], "params": [{"name": "force", "type": null}], "returns": null}, {"name": "asideToggle", "docblock": null, "modifiers": [], "params": [{"name": "e", "type": null}], "returns": null}], "props": {"children": {"type": {"name": "node"}, "required": false, "description": "The children, defaults to  `<span className=\"navbar-toggler-icon\" />`."}, "id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks, defaults to `appsidebartoggler`.", "defaultValue": {"value": "'appasidetoggler'", "computed": false}}, "className": {"type": {"name": "string"}, "required": false, "description": "The CSS class name, defaults to `navbar-toggler`."}, "defaultOpen": {"type": {"name": "bool"}, "required": false, "description": "The default open flag, defaults to `false`.", "defaultValue": {"value": "false", "computed": false}}, "display": {"type": {"name": "any"}, "required": false, "description": "The display bootstrap class, defaults to `lg`.", "defaultValue": {"value": "'lg'", "computed": false}}, "mobile": {"type": {"name": "bool"}, "required": false, "description": "The mobile mode flag, default to `false`.", "defaultValue": {"value": "false", "computed": false}}, "tag": {"type": {"name": "union", "value": [{"name": "func"}, {"name": "string"}]}, "required": false, "description": "The HTML tag, defaults to `button`.", "defaultValue": {"value": "'button'", "computed": false}}, "type": {"type": {"name": "string"}, "required": false, "description": "The HTML type, defauls to `button`.", "defaultValue": {"value": "'button'", "computed": false}}}}, "src/lib/components/appbreadcrumb.react.js": {"description": "CoreUI breadcrumb component.", "displayName": "appbreadcrumb", "methods": [{"name": "linkClick", "docblock": null, "modifiers": [], "params": [{"name": "e", "type": null}, {"name": "href", "type": null}, {"name": "refresh", "type": null}], "returns": null}, {"name": "getPath", "docblock": null, "modifiers": [], "params": [{"name": "pathname", "type": null}], "returns": null}, {"name": "breadcrumbItem", "docblock": null, "modifiers": [], "params": [{"name": "item", "type": null}, {"name": "key", "type": null}], "returns": null}, {"name": "breadcrumb", "docblock": null, "modifiers": [], "params": [], "returns": null}], "props": {"children": {"type": {"name": "node"}, "required": false, "description": "The children."}, "id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks, defaults to `appbreadcrumb`.", "defaultValue": {"value": "'appbreadcrumb'", "computed": false}}, "className": {"type": {"name": "string"}, "required": false, "description": "The CSS class name, defaults to `app-breadcrumb`.", "defaultValue": {"value": "''", "computed": false}}, "appRoutes": {"type": {"name": "any"}, "required": false, "description": "A list of dictionaries describing URL path in a human-readable way.\nDefaults to `[{ path: '/', name: 'Home' }]`.", "defaultValue": {"value": "[{ path: '/', name: 'Home' }]", "computed": false}}, "tag": {"type": {"name": "union", "value": [{"name": "func"}, {"name": "string"}]}, "required": false, "description": "The HTML tag, defaults to `div`.", "defaultValue": {"value": "'div'", "computed": false}}}}, "src/lib/components/appfooter.react.js": {"description": "CoreUI footer component.", "displayName": "appfooter", "methods": [{"name": "isFixed", "docblock": null, "modifiers": [], "params": [{"name": "fixed", "type": null}], "returns": null}], "props": {"children": {"type": {"name": "node"}, "required": false, "description": "The children."}, "id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks, defaults to `appfooter`.", "defaultValue": {"value": "'appfooter'", "computed": false}}, "className": {"type": {"name": "string"}, "required": false, "description": "The CSS class name, defaults to `app-footer`."}, "fixed": {"type": {"name": "bool"}, "required": false, "description": "The fixed flag, defaults to `false`.", "defaultValue": {"value": "false", "computed": false}}, "tag": {"type": {"name": "union", "value": [{"name": "func"}, {"name": "string"}]}, "required": false, "description": "The HTML tag, defaults to `footer`.", "defaultValue": {"value": "'footer'", "computed": false}}}}, "src/lib/components/appheader.react.js": {"description": "CoreUI header component.", "displayName": "appheader", "methods": [{"name": "isFixed", "docblock": null, "modifiers": [], "params": [{"name": "fixed", "type": null}], "returns": null}], "props": {"children": {"type": {"name": "node"}, "required": false, "description": "The children."}, "id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks, defaults to `appheader`.", "defaultValue": {"value": "'appheader'", "computed": false}}, "className": {"type": {"name": "string"}, "required": false, "description": "The CSS class name."}, "fixed": {"type": {"name": "bool"}, "required": false, "description": "Wether the header is fixed, defaults to `false`.", "defaultValue": {"value": "false", "computed": false}}, "tag": {"type": {"name": "union", "value": [{"name": "func"}, {"name": "string"}]}, "required": false, "description": "The HTML tag, defaults to `header`.", "defaultValue": {"value": "'header'", "computed": false}}}}, "src/lib/components/appheaderdropdown.react.js": {"description": "CoreUI header dropdown menu component.", "displayName": "appheaderdropdown", "methods": [{"name": "toggle", "docblock": null, "modifiers": [], "params": [], "returns": null}], "props": {"children": {"type": {"name": "node"}, "required": false, "description": "The children."}, "id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks, defaults to `appheaderdropdown`.", "defaultValue": {"value": "'appheaderdropdown'", "computed": false}}, "direction": {"type": {"name": "string"}, "required": false, "description": "The dropdown direction, defaults to `down`.", "defaultValue": {"value": "'down'", "computed": false}}}}, "src/lib/components/appnavbarbrand.react.js": {"description": "CoreUI navbar brand component.", "displayName": "appnavbarbrand", "methods": [{"name": "imgSrc", "docblock": null, "modifiers": [], "params": [{"name": "brand", "type": null}], "returns": null}, {"name": "imgWidth", "docblock": null, "modifiers": [], "params": [{"name": "brand", "type": null}], "returns": null}, {"name": "imgHeight", "docblock": null, "modifiers": [], "params": [{"name": "brand", "type": null}], "returns": null}, {"name": "imgAlt", "docblock": null, "modifiers": [], "params": [{"name": "brand", "type": null}], "returns": null}, {"name": "navbarBrandImg", "docblock": null, "modifiers": [], "params": [{"name": "props", "type": null}, {"name": "classBrand", "type": null}, {"name": "key", "type": null}], "returns": null}], "props": {"tag": {"type": {"name": "union", "value": [{"name": "func"}, {"name": "string"}]}, "required": false, "description": "The HTML tag, defaults to `a`.", "defaultValue": {"value": "'a'", "computed": false}}, "children": {"type": {"name": "node"}, "required": false, "description": "The children, defaults to `<img src width height alt className/>`."}, "id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks, defaults to `appnavbarbrand`.", "defaultValue": {"value": "'appnavbarbrand'", "computed": false}}, "className": {"type": {"name": "string"}, "required": false, "description": "The CSS class name, defaults to `navbar-brand`."}, "brand": {"type": {"name": "any"}, "required": false, "description": "The brand image, given as `{src, width, height, alt, className: 'navbar-brand' }`."}, "full": {"type": {"name": "any"}, "required": false, "description": "The full size brand image, given as `{src, width, height, alt, className: 'navbar-brand-full' }`."}, "minimized": {"type": {"name": "any"}, "required": false, "description": "The minimized brand image, given as `{src, width, height, alt, className: 'navbar-brand-minimized' }`."}}}, "src/lib/components/approuteconditional.react.js": {"description": "Route conditional component.\n\nThis component (and its children) are only visible if the browser's current URL matches its route prop.\nThis provides a light-weight client-side alternative to the server-side routing described in https://dash.plot.ly/urls.", "displayName": "approuteconditional", "methods": [{"name": "activeRoute", "docblock": null, "modifiers": [], "params": [{"name": "routeName", "type": null}], "returns": null}], "props": {"children": {"type": {"name": "node"}, "required": false, "description": "The children."}, "id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks, defaults to `approuteconditional`.", "defaultValue": {"value": "'approuteconditional'", "computed": false}}, "route": {"type": {"name": "string"}, "required": true, "description": "The route. This component is only visible if the browser's current URL matches the contents of this prop."}, "className": {"type": {"name": "string"}, "required": false, "description": "The CSS class name, defaults to `route-conditional`."}, "tag": {"type": {"name": "union", "value": [{"name": "func"}, {"name": "string"}]}, "required": false, "description": "The HTML tag, defaults to `div`.", "defaultValue": {"value": "'div'", "computed": false}}}}, "src/lib/components/appsidebar.react.js": {"description": "CoreUI sidebar component.", "displayName": "appsidebar", "methods": [{"name": "isCompact", "docblock": null, "modifiers": [], "params": [{"name": "compact", "type": null}], "returns": null}, {"name": "isFixed", "docblock": null, "modifiers": [], "params": [{"name": "fixed", "type": null}], "returns": null}, {"name": "isMinimized", "docblock": null, "modifiers": [], "params": [{"name": "minimized", "type": null}], "returns": null}, {"name": "isOffCanvas", "docblock": null, "modifiers": [], "params": [{"name": "offCanvas", "type": null}], "returns": null}, {"name": "displayBreakpoint", "docblock": null, "modifiers": [], "params": [{"name": "display", "type": null}], "returns": null}, {"name": "hideMobile", "docblock": null, "modifiers": [], "params": [], "returns": null}, {"name": "onClickOut", "docblock": null, "modifiers": [], "params": [{"name": "e", "type": null}], "returns": null}], "props": {"children": {"type": {"name": "node"}, "required": false, "description": "The children, supports `appsidebarfooter`, `appsidebarform`, `appsidebarheader`, `appsidebarminimizer`, and `appsidebarnav`."}, "id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks, defaults to `appsidebar`.", "defaultValue": {"value": "'appsidebar'", "computed": false}}, "className": {"type": {"name": "string"}, "required": false, "description": "The CSS class name, defaults to `sidebar`."}, "compact": {"type": {"name": "bool"}, "required": false, "description": "The compact flag, defaults to `false`.", "defaultValue": {"value": "false", "computed": false}}, "display": {"type": {"name": "string"}, "required": false, "description": "The display bootstrap class.", "defaultValue": {"value": "''", "computed": false}}, "fixed": {"type": {"name": "bool"}, "required": false, "description": "The fixed flag, defaults to `false`.", "defaultValue": {"value": "false", "computed": false}}, "minimized": {"type": {"name": "bool"}, "required": false, "description": "The minimized flag, defaults to `false`.", "defaultValue": {"value": "false", "computed": false}}, "isOpen": {"type": {"name": "bool"}, "required": false, "description": "The isOpen flag, defaults to `false`.", "defaultValue": {"value": "false", "computed": false}}, "offCanvas": {"type": {"name": "bool"}, "required": false, "description": "The offCanvas flag, defaults to `false`.", "defaultValue": {"value": "false", "computed": false}}, "staticContext": {"type": {"name": "any"}, "required": false, "description": "TODO document this."}, "tag": {"type": {"name": "union", "value": [{"name": "func"}, {"name": "string"}]}, "required": false, "description": "The HTML tag, defaults to `div`.", "defaultValue": {"value": "'div'", "computed": false}}}}, "src/lib/components/appsidebarfooter.react.js": {"description": "CoreUI sidebar footer component.", "displayName": "appsidebarfooter", "methods": [], "props": {"children": {"type": {"name": "node"}, "required": false, "description": "The children."}, "id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks, defaults to `appsidebarfooter`.", "defaultValue": {"value": "'appsidebarfooter'", "computed": false}}, "className": {"type": {"name": "string"}, "required": false, "description": "The CSS class name, defaults to `sidebar-footer`."}, "tag": {"type": {"name": "union", "value": [{"name": "func"}, {"name": "string"}]}, "required": false, "description": "The HTML tag, defaults to `div`.", "defaultValue": {"value": "'div'", "computed": false}}}}, "src/lib/components/appsidebarform.react.js": {"description": "CoreUI sidebar form component.", "displayName": "appsidebarform", "methods": [], "props": {"children": {"type": {"name": "node"}, "required": false, "description": "The children."}, "id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks, defaults to `appsidebarform`.", "defaultValue": {"value": "'appsidebarform'", "computed": false}}, "className": {"type": {"name": "string"}, "required": false, "description": "The CSS class name, defaults to `sidebar-form`."}, "tag": {"type": {"name": "union", "value": [{"name": "func"}, {"name": "string"}]}, "required": false, "description": "The HTML tag, defaults to `div`.", "defaultValue": {"value": "'div'", "computed": false}}}}, "src/lib/components/appsidebarheader.react.js": {"description": "CoreUI sidebar header component.", "displayName": "appsidebarheader", "methods": [], "props": {"children": {"type": {"name": "node"}, "required": false, "description": "The children."}, "id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks, defaults to `appsidebarheader`.", "defaultValue": {"value": "'appsidebarheader'", "computed": false}}, "className": {"type": {"name": "string"}, "required": false, "description": "The CSS class name, defaults to `sidebar-header`."}, "tag": {"type": {"name": "union", "value": [{"name": "func"}, {"name": "string"}]}, "required": false, "description": "The HTML tag, defaults to `div`.", "defaultValue": {"value": "'div'", "computed": false}}}}, "src/lib/components/appsidebarminimizer.react.js": {"description": "CoreUI sidebar minimizer component.", "displayName": "appsidebarminimizer", "methods": [{"name": "sidebarMinimize", "docblock": null, "modifiers": [], "params": [], "returns": null}, {"name": "togglePs", "docblock": null, "modifiers": [], "params": [{"name": "toggle", "type": null}], "returns": null}, {"name": "brandMinimize", "docblock": null, "modifiers": [], "params": [], "returns": null}, {"name": "handleClick", "docblock": null, "modifiers": [], "params": [{"name": "e", "type": null}], "returns": null}], "props": {"children": {"type": {"name": "node"}, "required": false, "description": "The children."}, "id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks, defaults to `appsidebarminimizer`.", "defaultValue": {"value": "'appsidebarminimizer'", "computed": false}}, "className": {"type": {"name": "string"}, "required": false, "description": "The CSS class name, defaults to `sidebar-minimizer mt-auto`."}, "tag": {"type": {"name": "union", "value": [{"name": "func"}, {"name": "string"}]}, "required": false, "description": "The HTML tag, defaults to `button`.", "defaultValue": {"value": "'button'", "computed": false}}, "type": {"type": {"name": "string"}, "required": false, "description": "The HTML type, defauls to `button`.", "defaultValue": {"value": "'button'", "computed": false}}}}, "src/lib/components/appsidebarnav.react.js": {"description": "CoreUI sidebar nav component.\n\nThis component manages the location in a multi-page much as Dash Core Components `Location` component.\nIt is also compatible with the Dash Core Components `Link` component.\nSee https://dash.plot.ly/urls for details.", "displayName": "appsidebarnav", "methods": [{"name": "updateLocation", "docblock": null, "modifiers": [], "params": [{"name": "props", "type": null}], "returns": null}, {"name": "linkClick", "docblock": null, "modifiers": [], "params": [{"name": "e", "type": null}, {"name": "href", "type": null}, {"name": "refresh", "type": null}], "returns": null}, {"name": "dropdownClick", "docblock": null, "modifiers": [], "params": [{"name": "e", "type": null}], "returns": null}, {"name": "activeRoute", "docblock": null, "modifiers": [], "params": [{"name": "routeName", "type": null}, {"name": "activeClasses", "type": null}, {"name": "notActiveClasses", "type": null}], "returns": null}, {"name": "hideMobile", "docblock": null, "modifiers": [], "params": [], "returns": null}, {"name": "navList", "docblock": null, "modifiers": [], "params": [{"name": "items", "type": null}], "returns": null}, {"name": "navType", "docblock": null, "modifiers": [], "params": [{"name": "item", "type": null}, {"name": "idx", "type": null}], "returns": null}, {"name": "navTitle", "docblock": null, "modifiers": [], "params": [{"name": "title", "type": null}, {"name": "key", "type": null}], "returns": null}, {"name": "navWrapper", "docblock": null, "modifiers": [], "params": [{"name": "item", "type": null}], "returns": null}, {"name": "navDivider", "docblock": null, "modifiers": [], "params": [{"name": "divider", "type": null}, {"name": "key", "type": null}], "returns": null}, {"name": "navLabel", "docblock": null, "modifiers": [], "params": [{"name": "item", "type": null}, {"name": "key", "type": null}], "returns": null}, {"name": "navDropdown", "docblock": null, "modifiers": [], "params": [{"name": "item", "type": null}, {"name": "key", "type": null}], "returns": null}, {"name": "navItem", "docblock": null, "modifiers": [], "params": [{"name": "item", "type": null}, {"name": "key", "type": null}], "returns": null}, {"name": "navLink", "docblock": null, "modifiers": [], "params": [{"name": "item", "type": null}, {"name": "key", "type": null}, {"name": "classes", "type": null}], "returns": null}, {"name": "navBadge", "docblock": null, "modifiers": [], "params": [{"name": "badge", "type": null}], "returns": null}, {"name": "isExternal", "docblock": null, "modifiers": [], "params": [{"name": "url", "type": null}], "returns": null}], "props": {"children": {"type": {"name": "node"}, "required": false, "description": "The children, defaults to `navConfig.items`."}, "id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks, defaults to `appsidebarnav`.", "defaultValue": {"value": "'appsidebarnav'", "computed": false}}, "className": {"type": {"name": "string"}, "required": false, "description": "The CSS class name, defaults to `sidebar-nav`."}, "pathname": {"type": {"name": "string"}, "required": false, "description": "The pathname in window.location - e.g., \"/my/full/pathname\""}, "search": {"type": {"name": "string"}, "required": false, "description": "The search in window.location - e.g., \"?myargument=1\""}, "hash": {"type": {"name": "string"}, "required": false, "description": "The hash in window.location - e.g., \"#myhash\""}, "href": {"type": {"name": "string"}, "required": false, "description": "The href in window.location - e.g., \"/my/full/pathname?myargument=1#myhash\""}, "refresh": {"type": {"name": "bool"}, "required": false, "description": "Refresh the page when the location is updated? Default to `true`.", "defaultValue": {"value": "true", "computed": false}}, "setProps": {"type": {"name": "func"}, "required": false, "description": "The setProps callback function provided by Dash iff a callback is connected."}, "navConfig": {"type": {"name": "any"}, "required": false, "description": "The sidebar nav config, used to configure the contents of this sidebar nav.\nAlternatively, you can add children manually, which will cause this prop to be ignored.\nA sidebar nav config object has the following structure:\n- title:\n````js\n{\n  title: true,\n  name: 'Theme',\n  class: ''              // optional class names space delimited list for title item ex: \"text-center\"\n  wrapper: {             // optional wrapper object\n    element: '',         // optional* valid HTML5 element tag ( *required when passing attributes)\n    attributes: {}       // optional valid JS object with JS API naming ex: { className: \"my-class\", style: { fontFamily: \"Verdana\" }, id: \"my-id\"}\n  },\n},\n````\n- item:\n````js\n{\n  name: 'Dashboard',\n  url: '/dashboard',\n  icon: `icon-speedometer',\n  class: '',                    // optional\n  variant: 'success',           // optional\n  badge: {\n    variant: 'info',\n    text: 'NEW',\n    class: ''                   // optional\n  },\n  attributes: { target: '_blank', rel: \"noreferrer noopener\", disabled: false, hidden: false }, // (v2.1.0 up) optional valid JS object with JS API naming\n},\n````\n- item with `children` array - works like `nav-dropdown-toggle` with `nav-dropdown-items`\n````js\n{\n  name: 'Icons',\n  url: '/icons',\n  icon: 'icon-star',\n  children: [\n    {\n      name: 'Flags',     // item options apply\n      url: '/icons/flags',\n      icon: 'icon-star',\n      badge: {\n        variant: 'success',\n        text: 'NEW'\n      }\n    },\n  ]\n}\n````\n- divider:\n````js\n{\n  divider: true\n},\n````\n\n- order of precedence:\n````\ntitle > divider > children > item\n````", "defaultValue": {"value": "{\n  items: [\n    {\n      name: 'Dashboard',\n      url: '/dashboard',\n      icon: 'cui-speedometer icons',\n      badge: { variant: 'info', text: 'NEW' }\n    }]\n}", "computed": false}}, "navFunc": {"type": {"name": "union", "value": [{"name": "func"}, {"name": "string"}]}, "required": false, "description": "TODO document this."}, "isOpen": {"type": {"name": "bool"}, "required": false, "description": "The isOpen flag, defaults to `false`.", "defaultValue": {"value": "false", "computed": false}}, "staticContext": {"type": {"name": "any"}, "required": false, "description": "TODO document this."}, "tag": {"type": {"name": "union", "value": [{"name": "func"}, {"name": "string"}]}, "required": false, "description": "The HTML tag, defaults to `nav`.", "defaultValue": {"value": "'nav'", "computed": false}}}}, "src/lib/components/appsidebartoggler.react.js": {"description": "CoreUI sidebar toggler component.", "displayName": "appsidebartoggler", "methods": [{"name": "sidebarToggle", "docblock": null, "modifiers": [], "params": [{"name": "e", "type": null}], "returns": null}, {"name": "toggle", "docblock": null, "modifiers": [], "params": [{"name": "force", "type": null}], "returns": null}], "props": {"children": {"type": {"name": "node"}, "required": false, "description": "The children, defaults to  `<span className=\"navbar-toggler-icon\" />`."}, "id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks, defaults to `appsidebartoggler`.", "defaultValue": {"value": "'appsidebartoggler'", "computed": false}}, "className": {"type": {"name": "string"}, "required": false, "description": "The CSS class name, defaults to `navbar-toggler`."}, "display": {"type": {"name": "any"}, "required": false, "description": "The display bootstrap class, defaults to `lg`.", "defaultValue": {"value": "'lg'", "computed": false}}, "mobile": {"type": {"name": "bool"}, "required": false, "description": "The mobile mode flag, default to `false`.", "defaultValue": {"value": "false", "computed": false}}, "tag": {"type": {"name": "union", "value": [{"name": "func"}, {"name": "string"}]}, "required": false, "description": "The HTML tag, defaults to `button`.", "defaultValue": {"value": "'button'", "computed": false}}, "type": {"type": {"name": "string"}, "required": false, "description": "The HTML type, defauls to `button`.", "defaultValue": {"value": "'button'", "computed": false}}}}}